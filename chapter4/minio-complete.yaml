---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-ml-workshop
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-ml-workshop
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: min
    app.kubernetes.io/version: "0.0.1"
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: min
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/instance: min
        app.kubernetes.io/version: "0.0.1"
    spec:
      containers:
        - name: minio
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 30
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
 
          image: docker.io/minio/minio:latest
          imagePullPolicy: IfNotPresent
          resources: {}
          args:
            - server
            - /storage
#            - --config-dir=/config
            - --console-address=:33933
          env:
            - name: MINIO_ACCESS_KEY
              value: "minio"
            - name: MINIO_SECRET_KEY
              value: "minio123"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
            - name: MINIO_TRACE
              value: "true"
            - name: MINIO_ROOT_USER
              value: "minio"
            - name: MINIO_ROOT_PASSWORD
              value: "minio123"
 
          ports:
            - containerPort: 9000
            - containerPort: 33933
          volumeMounts:
            - name: storage
              mountPath: "/storage"
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: minio-ml-workshop
 
---
apiVersion: v1
kind: Service
metadata:
  name: minio-ml-workshop
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: min
    app.kubernetes.io/version: "0.0.1"
spec:
  ports:
    - port: 9000
      protocol: TCP
      name: api
    - port: 33933
      protocol: TCP
      name: web
 
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: min
  type: ClusterIP
  sessionAffinity: None
 
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: minio-ml-workshop
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: min
    app.kubernetes.io/version: "0.0.1"
  annotations:
    openshift.io/host.generated: 'true'
spec:
  to:
    kind: Service
    name: minio-ml-workshop
    weight: 100
  port:
    targetPort: "web"
  wildcardPolicy: None
 
